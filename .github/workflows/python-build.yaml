name: Build Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build Project
      run: |
        python -m build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.0.0
      with:
        name: dist-${{ matrix.python-version }}
        path: dist/*
        if-no-files-found: error
        retention-days: 10

  publish:
    runs-on: ubuntu-latest
    env:
      pub_token: ${{ secrets.PYPI_API_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.0
        with:
          name: download-dist-${{ matrix.python-version }}
          pattern: dist-${{ matrix.python-version }}
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ env.pub_token }}